------------------
-- Ejercicio 13 --
------------------
/*
Cree el/los objetos de base de datos necesarios para implantar la siguiente regla
“Ningún jefe puede tener un salario mayor al 20% de las suma de los salarios de
sus empleados totales (directos + indirectos)”. Se sabe que en la actualidad dicha
regla se cumple y que la base de datos es accedida por n aplicaciones de
diferentes tipos y tecnologías*/use GD2015C1goalter trigger ej13 on empleadofor insert, updateasbegin	if exists(select * from inserted where empl_salario > 0.2 * dbo.salarioTotalDeEmpleados(empl_codigo))		rollbackendgo--Está un poco mal porque, si no se cumpliría la regla en al menos un caso, debería fallar (hacer rollback), y no --hacer para los que cumplen y para los que no cumplen no, no debería hacerlo para ninguno (por integridad).--Además creo que entra en una recursividad infinita, pero Henry no dijo nada al respecto/*create trigger ej13 on empleadoinstead of insert, updateasbegin	insert into empleado	select * from inserted	where inserted.empl_salario <= 0.2 * dbo.salarioTotalDeEmpleados(inserted.empl_codigo)endgo*/alter function salarioTotalDeEmpleados (@jefe numeric(6))returns decimal(12, 2)asbegin	return (select isnull(sum(empl_salario + dbo.salarioTotalDeEmpleados(empl_codigo)), 0) from empleado		where empl_jefe = @jefe)endgo-- Con cursor:-- Para mí es malísima esta solución, es totalmente al pedo usar un cursor cuando podés usar tranquilamente lo de arriba.alter function salarioTotalDeEmpleados (@jefe numeric(6))returns decimal(12, 2)asbegin	declare @total decimal(12, 2)	set @total = 0	declare cursor_salarioEmpleados cursor for	select empl_codigo, empl_salario from empleado -- Acá se podría hacer directamente el @total += empl_salario (y la recursividad también)	where empl_jefe = @jefe		declare @empleado numeric(6)	declare @empl_salario decimal(12, 2)	open cursor_salarioEmpleados		fetch next from cursor_salarioEmpleados into @empleado, @empl_salario		while @@FETCH_STATUS = 0		begin			set @total += @empl_salario + dbo.salarioTotalDeEmpleados(@empleado)			fetch next from cursor_salarioEmpleados into @empleado, @empl_salario		end	close cursor_salarioEmpleados	deallocate cursor_salarioEmpleados	return @totalendgoselect empl_codigo, dbo.salarioTotalDeEmpleados(empl_codigo) from empleado